[tool.poetry]
name = "connect-markdown-renderer"
version = "0.0.0"
description = "Connect Markdown Renderer"
authors = ["CloudBlue"]
license = "Apache-2.0"
packages = [
    { include = "connect" },
    { include = "cmr" }
]
readme = "./README.md"
documentation = "https://github.com/cloudblue/connect-markdown-renderer"
homepage = "https://connect.cloudblue.com"
repository = "https://github.com/cloudblue/connect-markdown-renderer"

[tool.poetry.dependencies]
python = ">=3.8,<4"
rich = ">=12.4.4,<13"
markdown-it-py = "^2.2.0"

[tool.poetry.group.test.dependencies]
pytest = "^7.3"
pytest-cov = "^4.1"
pytest-mock = "^3.10"
coverage = {extras = ["toml"], version = "^7.2"}
flake8 = ">=3.8,<6"
flake8-bugbear = "~22"
flake8-cognitive-complexity = "^0.1"
flake8-commas = "^2.1.0"
flake8-future-import = "~0.4"
flake8-broken-line = "~0.6"
flake8-isort = "^6.0.0"
flake8-pyproject = "^1.2.3"

[tool.poetry.group.docs.dependencies]
Sphinx = "^4.5.0"
sphinx-copybutton = "^0.5.0"
m2r2 = "^0.3.2"

[build-system]
requires = ["poetry-core>=1.0.0", "setuptools>=42"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = "tests"
addopts = "--cov=connect.utils.terminal --cov-report=term-missing:skip-covered --cov-report=html --cov-report=xml"

[tool.coverage.run]
branch = true

[tool.coverage.report]
omit = [
]

exclude_lines = [
    "pragma: no cover",
    "def __str__",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

[tool.isort]
src_paths = "*"
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
group_by_package = true
multi_line_output = 3
force_grid_wrap = 4
combine_as_imports = true
use_parentheses = true
include_trailing_comma = true
line_length = 100
lines_after_imports = 2

[tool.flake8]
exclude = [
    ".idea",
    ".vscode",
    ".git",
    "pg_data",
    "venv",
    "*.eggs",
    "*.egg",
    "tests/fixtures",
    "setup.py",
    "resources",
    "docs/*",
]
show-source = true
max-line-length = 100
max-cognitive-complexity = 20
ignore = ["FI1", "I100", "W503"]
